<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Ryan Clarke </title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>http://www.ryanclarke.net/tags/sep/index.xml/</link>
    <language>en-us</language>
    <author>Ryan Clarke</author>
    <copyright>Â© 2015 Ryan Clarke</copyright>
    <updated>Wed, 18 Mar 2015 01:22:35 EDT</updated>
    
    <item>
      <title>TalkTimer</title>
      <link>http://www.ryanclarke.net/project/talktimer/</link>
      <pubDate>Wed, 18 Mar 2015 01:22:35 EDT</pubDate>
      <author>Ryan Clarke</author>
      <guid>http://www.ryanclarke.net/project/talktimer/</guid>
      <description>

&lt;p&gt;How often have you needed a simple timer app that counts down the minutes and seconds to zero? If you said even once, then you might benefit from this app. Ninety-eight and three quarters percent guaranteed.&lt;/p&gt;

&lt;p&gt;This app will start counting at whatever minute you specify. But not just the numbers change. The app turns bold new colors at the two and one minute milestones. &amp;ldquo;Warning, you are almost done!&amp;rdquo; When the time finally expires, the app hits a mellifluous gong. Of course, the gong can be turned off if you are using the app covertly and silence is a must. Your choice!&lt;/p&gt;

&lt;p&gt;There&amp;rsquo;s more: &amp;ldquo;0&amp;rdquo; is not the last number that the app displays! Using the power of negative integers, this app can show you how many minutes have elapsed since the gong/silence. Killer feature.&lt;/p&gt;

&lt;p&gt;I use this app to time the lightning talks I host at my company (&lt;a href=&#34;http://www.sep.com&#34;&gt;SEP&lt;/a&gt;). Over the course of an hour, four speakers have 10 minutes each to share something interesting (or else!). As soon as the gong reverberates they are required by extreme social pressure to quit presenting. They then have a few minutes to endure an audience cross-examination while the next presenter makes sacrifices to the projector in hopes that it will deem his slidedeck worthy of display. If this app seems tailor made to fit this scenario, it is simply because I tailor made it (artisanally) to fit this scenario.&lt;/p&gt;

&lt;p&gt;Available now on all your devices! &lt;em&gt;as long as they run Windows 8.1+ or Windows Phone 8.1+.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://apps.microsoft.com/windows/app/talktimer/ea2e3a6d-8931-4e63-8cee-4872f519b677&#34;&gt;&lt;img src=&#34;/images/project/WindowsStore_badge_en_English_Green_med_258x67.png&#34; alt=&#34;Windows Store link&#34; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.windowsphone.com/en-us/store/app/talktimer/c1dcaefe-298d-42ce-858a-847d7fc7d6a9&#34;&gt;&lt;img src=&#34;/images/project/258x67_WPS_Download_cyan.png&#34; alt=&#34;Windows Phone Store link&#34; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;toc_0&#34;&gt;Privacy Policy&lt;/h3&gt;

&lt;p&gt;This app knows nothing about anything. Privacy policy unnecessary.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My year as an apprentice software engineer</title>
      <link>http://www.ryanclarke.net/post/my-year-as-an-apprentice-software-engineer/</link>
      <pubDate>Mon, 24 Nov 2014 11:00:00 EST</pubDate>
      <author>Ryan Clarke</author>
      <guid>http://www.ryanclarke.net/post/my-year-as-an-apprentice-software-engineer/</guid>
      <description>

&lt;h2 id=&#34;toc_0&#34;&gt;The unlikely programmer&lt;/h2&gt;

&lt;p&gt;Music theory was my &amp;lsquo;thing&amp;rsquo; from the time I was 10, so naturally that&amp;rsquo;s what I studied in college. Years later I found programming and, realizing a better thing when I saw one, I switched &amp;lsquo;things.&amp;rsquo;&lt;/p&gt;

&lt;p&gt;After attending the Institute of Whatever the Search Results Contained for a couple years, I decided to ask for help. I went to a meetup: Indianapolis Code and Coffee (SoHo Cafe, Thursdays at 7am). Circumstances quickly got out of control and I ended up applying to SEP to work as a professional programmer.&lt;/p&gt;

&lt;p&gt;They looked at my qualifications, and finding none, they looked at my skills. They said &amp;ldquo;hmm&amp;rdquo; and then they said &amp;ldquo;okay, but he&amp;rsquo;s definitely not a Software Engineer 1 yet.&amp;rdquo; So they gave me the title of apprentice. It said &amp;ldquo;Apprentice Software Engineer&amp;rdquo; on my business card but it said &amp;ldquo;Software Engineer 0&amp;rdquo; on my email signature because I thought it was funny.&lt;/p&gt;

&lt;p&gt;Some might have seen this title as an insult: &amp;ldquo;Let&amp;rsquo;s call him &amp;lsquo;n00b&amp;rsquo; and hurt his feelings.&amp;rdquo; I received it with joy; it was permission. It was permission to learn and grow. I guess it did take some humility to be told I didn&amp;rsquo;t know much, but it was the truth (I may have mentioned it in my interview). My goal in applying to SEP was to learn, so really it turned out better than I could have hoped: I was the company apprentice and I wanted to make the best of it.&lt;/p&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;What apprenticeship meant to me&lt;/h2&gt;

&lt;p&gt;This is the part of the story where I say that being an apprentice wasn&amp;rsquo;t easy, but I&amp;rsquo;ll save that for later because primarily it was awesome. &amp;ldquo;Apprentice&amp;rdquo; means &amp;ldquo;patience please, he&amp;rsquo;s busy learning.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;Being apprentice told me that I was not expected to be doing SE1 level work (though I certainly tried), I was supposed to be &lt;em&gt;learning&lt;/em&gt; enough to eventually do SE1 quality work. In fact, I took it as my default position to err on the side of learning rather than doing. What&amp;rsquo;s the point of doing a lot if it&amp;rsquo;s wrong?&lt;/p&gt;

&lt;p&gt;Being an apprentice also told everyone else in the company what expectation to set for my work. Perhaps for some people it set them too low (not really sure), but I&amp;rsquo;d rather impress than disappoint. SEP has a very supportive environment regardless of title, but it was still intimidating for me to join knowing I was basically the one engineer without a computer degree. Being called apprentice reduced a lot of stress, especially in the first few weeks. Apprenticeship functioned as a plea for help: &amp;ldquo;I don&amp;rsquo;t know this thing, please teach me.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;Lastly, it was an implicit commitment from the company to help me succeed. They didn&amp;rsquo;t hire me to watch me implode (I assume). In my year of apprenticeship I was put on teams that really helped me grow and learn. My teammates were excellent mentors: patient, encouraging, and most of all, &lt;em&gt;really&lt;/em&gt; skilled. I secretly suspect that my manager did this on purpose (thank you) because it totally worked.&lt;/p&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;Learning on the job&lt;/h2&gt;

&lt;p&gt;My first project was an internal experience tracing tool called Chops built in Ruby on Rails. Matt Swanson, the lead, taught me about pair programming, unit testing, git, and kanban-like project tracking. It was boot camp, and I came out of it feeling way more confident than when I went in.&lt;/p&gt;

&lt;p&gt;My second project was Planet, a feed aggregator web service for all internal blogs and announcement sources at SEP. It gave me something at the company to &amp;lsquo;own&amp;rsquo; and benefit the entire company. In reality it&amp;rsquo;s a pretty small time app, but I like that there&amp;rsquo;s something I can remember to myself, &amp;ldquo;See? I&amp;rsquo;m helping.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;My first client project was an Android app for a local credit union. This was the defining experience of my apprenticeship. We did an awesome job on this project. We knocked it out of the park. We killed it. We rocked. And I got to be a part of all that: coding, sharing, building, deciding. I got to program, refactor, test, pair, discuss, get upset about a bug, go for a walk and come back with the answer. I got to give input in retrospectives, share at standups, and ask questions all the time. I got to help set up a build server, create a testing document, fill in missing integration tests, and watch the rows of test devices spring to life running my code. I got to push a broken build to master minutes before going home for the day. I got to be told never, ever, as-you-value-your-sweet-life ever do that again. I got to change, to learn and grow and become a real software engineer. Thank you to my team: Matt Terry, Matt Swanson, and Aaron Milam. Big thank you to Kyle Pinches, our project manager.&lt;/p&gt;

&lt;h2 id=&#34;toc_3&#34;&gt;Tips for other apprentices&lt;/h2&gt;

&lt;p&gt;I may have only been an apprentice for a year, but the journey still stretches far ahead. I plan to continue to apply the lessons I learned during that year for the duration of my career. Or, at least, as long as they continue to work.&lt;/p&gt;

&lt;p&gt;If anyone is wondering, here are some tips for a successful apprenticeship. Remember: a successful apprenticeship is largely your responsibility.&lt;/p&gt;

&lt;h5 id=&#34;toc_4&#34;&gt;Ask questions.&lt;/h5&gt;

&lt;p&gt;Don&amp;rsquo;t be afraid to look dumb. Of course you shouldn&amp;rsquo;t ask stupid questions, but many questions that seem stupid are really just basic question. Ask them, because if you don&amp;rsquo;t understand the basics you haven&amp;rsquo;t got a chance with anything else.&lt;/p&gt;

&lt;h5 id=&#34;toc_5&#34;&gt;Try new things.&lt;/h5&gt;

&lt;p&gt;This shouldn&amp;rsquo;t be on the list since learning is the whole point of apprenticeship, but it can be tiring to always live on the edge of your skill level. Don&amp;rsquo;t succumb. It&amp;rsquo;s okay, when discouraged, to do something you know you can crush. But once you&amp;rsquo;re feeling better, go back to pressing for more. Not to spoil the ending, but get used to trying new things. All the senior programmers I know are still expanding their skill.&lt;/p&gt;

&lt;h5 id=&#34;toc_6&#34;&gt;Claim one area to &amp;lsquo;own&amp;rsquo; and become the team expert.&lt;/h5&gt;

&lt;p&gt;As a beginner it can be difficult to make a real contribution since everyone else is so much more skilled. Then you feel useless. Find somewhere that you can be useful and prove your value and take responsibility for it. You may hate to hear this, but these opportunities are often considered boring or not fun. There&amp;rsquo;s less competition for doing those jobs and if you volunteer everyone will like it. Documentation is an obvious one. Sorry, but it&amp;rsquo;s a good tip.&lt;/p&gt;

&lt;h5 id=&#34;toc_7&#34;&gt;Work really hard but try not to show it.&lt;/h5&gt;

&lt;p&gt;What I mean is, don&amp;rsquo;t complain. Accept that it&amp;rsquo;s going to take you a lot more time and effort to do things the others think are simple. But don&amp;rsquo;t complain that it&amp;rsquo;s so hard. Your experienced coworkers were beginners once and they made it through. Of course, don&amp;rsquo;t take this that you shouldn&amp;rsquo;t ask for help: you should, all the time. It&amp;rsquo;s your job as an apprentice. But inquire, try to understand and work really hard, don&amp;rsquo;t whine.&lt;/p&gt;

&lt;h5 id=&#34;toc_8&#34;&gt;Be involved in the community.&lt;/h5&gt;

&lt;p&gt;The entire point of an apprenticeship is to learn from &lt;em&gt;others&lt;/em&gt;. Don&amp;rsquo;t sit in your cave coding; interact with other developers. And relying on just one mentor isn&amp;rsquo;t enough. The more mentors you have, the more idea and advice you&amp;rsquo;ll hear. Diversity is good. Plus, leaning on only one person will wear them out.&lt;/p&gt;

&lt;h5 id=&#34;toc_9&#34;&gt;Get code reviews and pair.&lt;/h5&gt;

&lt;p&gt;You want more than just ideas: you want genuine feedback. Code reviews and pairing are ways to get an experienced programmer to comment on your particular work in a particular instance. It&amp;rsquo;s concrete and it&amp;rsquo;s personal. At first they will find lots of things you can improve, but you&amp;rsquo;re new. You want to them to find the bad stuff so you can stop doing it. Remember to ask, &amp;ldquo;Why?&amp;rdquo; so you can understand the reason the issue was an issue. The goal is to see the amount of &amp;lsquo;negative&amp;rsquo; feedback decrease and the positive comments abound.&lt;/p&gt;

&lt;h5 id=&#34;toc_10&#34;&gt;Share what you know.&lt;/h5&gt;

&lt;p&gt;It seems weird advice for an apprentice, but there&amp;rsquo;s always someone who doesn&amp;rsquo;t know what you know. Help them. They may even be more experienced than you and never had that situation yet. Or you might give them a new perspective. At the very least, sharing thoughts helps you to clarify and organize your thoughts: something an apprentice desperately needs. Sharing knowledge is good, get in the habit early in your career. I wish I had done this more.&lt;/p&gt;

&lt;h2 id=&#34;toc_11&#34;&gt;The end&lt;/h2&gt;

&lt;p&gt;Ultimately, I think an apprenticeship&amp;rsquo;s success is directly the responsibility of the apprentice. No one is going to sit you down and feed you delicious knowledge from a spoon: they&amp;rsquo;re busy doing their own work. But if you ask them about something, if you work daily alongside them, they&amp;rsquo;ll normally give you years&amp;rsquo; worth of hard-fought insights for free. That&amp;rsquo;s a bargain.&lt;/p&gt;

&lt;p&gt;So anyway, I recommend apprenticeship. 5 stars.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to save a XAML view as an image</title>
      <link>http://www.ryanclarke.net/post/XAML-to-image/</link>
      <pubDate>Wed, 12 Nov 2014 10:19:31 EST</pubDate>
      <author>Ryan Clarke</author>
      <guid>http://www.ryanclarke.net/post/XAML-to-image/</guid>
      <description>

&lt;p&gt;I needed to take a xaml view and turn it into a bitmap. My Windows Phone app needed a live tile and the so I used &lt;code&gt;FlipTileData&lt;/code&gt; with the &lt;code&gt;BackgroundImage&lt;/code&gt; property set to my image URI. Almost every app has a tile so how hard can it be? Good news, it isn&amp;rsquo;t hard! Here&amp;rsquo;s how I turned the xaml view for my tile into the image I needed.&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;We&amp;rsquo;ll call this the starting point&lt;/h2&gt;

&lt;p&gt;Your xaml should be a &lt;code&gt;UserControl&lt;/code&gt;, which works really well with &lt;code&gt;WriteableBitmap&lt;/code&gt;&amp;rsquo;s &lt;code&gt;Render&lt;/code&gt; method which takes a &lt;code&gt;UIElement&lt;/code&gt; as it&amp;rsquo;s first parameter. Then you call &lt;code&gt;SaveJpeg&lt;/code&gt; on the bitmap and you&amp;rsquo;ve got an image.&lt;/p&gt;

&lt;p&gt;Sounds simple, but there are a number of little details which you must get right or you&amp;rsquo;ll end up with a mess and the image will not look right. In fact, in my original attempts at this tile it seemed like Windows Phone didn&amp;rsquo;t understand basic xaml controls, like &lt;code&gt;Grid&lt;/code&gt; and &lt;code&gt;StackPanel&lt;/code&gt;. Scary.&lt;/p&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;In which pixels matter for future reasons&lt;/h2&gt;

&lt;p&gt;Before we start writing all the super cool code, we need to get the tile dimensions right. I&amp;rsquo;ll be showing a normal/medium sized square tile, so it&amp;rsquo;s just 336 by 336 pixels. Wide tiles are 336 by 691, and the tiny tiles can&amp;rsquo;t be live (so its dimensions are just mental cruft which I decided not to aquire). You will be putting this width and height as properties on your tile control&amp;rsquo;s root xaml element. You will also be using them a lot of times in the code so we&amp;rsquo;ll just &amp;lsquo;save&amp;rsquo; them in a nice DRY place.&lt;/p&gt;

&lt;p&gt;So we have the tile control newed up and we have the dimensions.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var tileControl = new MyTileControl();
var tileWidth = 336;
var tileHeight = 336;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;The beating heart of the essay&lt;/h2&gt;

&lt;p&gt;Then we need to tell the tile what size it should be, since the properties on the root xaml element don&amp;rsquo;t fully do the job.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tileControl.Measure(new Size(tileWidth, tileHeight));
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here&amp;rsquo;s the part I was missing. If we leave &lt;code&gt;Arrange&lt;/code&gt; out the framework won&amp;rsquo;t know what size we just set and will just assume that the tile has no size and will pile everything up into the top corner regardless of grids or anything else. This one takes a &lt;code&gt;Rect&lt;/code&gt; (the first two parameters are the offset, so give it zeros).&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tileControl.Arrange(new Rect(0, 0, tileWidth, tileHeight));
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we can create the bitmap like I mentioned above. Of course, it needs to know the size too.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var bitmap = new WritableBitmap(tileWidth, tileHeight));
bitmap.Render(tileControl, null); // Don&#39;t need a transform
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Don&amp;rsquo;t forget to &lt;code&gt;Invalidate&lt;/code&gt; the bitmap. This is just a scary but concise way to say, &amp;ldquo;please recalculate the entire thing one more time just to make sure everything isn&amp;rsquo;t bonkers.&amp;rdquo; It&amp;rsquo;s a very important step, but oddly, this time it doesn&amp;rsquo;t need to know the size!&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bitmap.Invalidate();
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;toc_3&#34;&gt;Once more in case you missed it&lt;/h2&gt;

&lt;p&gt;So here&amp;rsquo;s the formula for success written all in one go.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var tileControl = new MyTileControl();
var tileWidth = 336;
var tileHeight = 336;

tileControl.Measure(new Size(tileWidth, tileHeight));
tileControl.Arrange(new Rect(0, 0, tileWidth, tileHeight));

var bitmap = new WritableBitmap(tileWidth, tileHeight));
bitmap.Render(tileControl, null);
bitmap.Invalidate();
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;toc_4&#34;&gt;Finishing the deed&lt;/h2&gt;

&lt;p&gt;Then we just call &lt;code&gt;SaveJpeg&lt;/code&gt; on the bitmap. It&amp;rsquo;s not particularly interesting, mostly file-related stuff, but I&amp;rsquo;ll include the code here just for completeness.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var filePath = &amp;quot;/Shared/ShellContent/MediumTile.jpg&amp;quot;;

try
{
    using (var myStore = IsolatedStorageFile.GetUserStoreForApplication())
    using (var fileStream = new IsolatedStorageFileStream(filePath, FileMode.Create, myStore))
    {
        var tileQuality = 80; // 100 is best quality but large; don&#39;t go below 75
        // 0 is orientation: reserved for possible future use?!
        bitmap.SaveJpeg(fileStream, tileWidth, tileHeight, 0, tileQuality);
    }
}
catch (Exception ex)
{
    // do something
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;toc_5&#34;&gt;Final disclaimers&lt;/h2&gt;

&lt;p&gt;That&amp;rsquo;s pretty much it. Of course, there are a number of other things to make the code not crash in normal use. I double check that the jpeg write succeeded, I verify that the uri I give to the tile is valid. I have try-catches around all the dangerous code. I generate jpeg paths using a guid so I ensure the image gets recognized as new (and I delete all the old tile images to keep from using up space).&lt;/p&gt;

&lt;p&gt;I hope this quick run-through helps you know all the different ways you have to set the size in the tile-making process.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Crosswind</title>
      <link>http://www.ryanclarke.net/project/crosswind/</link>
      <pubDate>Tue, 02 Sep 2014 00:00:00 UTC</pubDate>
      <author>Ryan Clarke</author>
      <guid>http://www.ryanclarke.net/project/crosswind/</guid>
      <description>&lt;p&gt;While on vacation with my parents earlier this year, my father, the airline pilot, asked me to make him an app. Often when heâs coming in for a landing he wants to know the crosswind on the runway. He knows the runway heading, he knows the wind heading and speed, he knows he has robust tools in his fight kit to do the calculations. But all he really wants to know is if the crosswind is close enough to the planeâs crosswind rating to worry about it. He wants an estimate, he wants it quick, and he wants to get on with the landing.&lt;/p&gt;

&lt;p&gt;So I built Crosswind.&lt;/p&gt;

&lt;p&gt;Crosswind is a single-purpose Windows Phone app that can take three inputs, do a sine for the result, and get out of the way. It was designed to be simple, beautiful, and (most of all) fast.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/images/project/crosswind/CrosswindMainPage.png&#34; alt=&#34;Crosswind Main Page&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Though I receive my commission at the end of May, I didnât start work on Crosswind until the beginning of August during the Summer 2014 &lt;a href=&#34;http://www.sep.com/labs/startupweekend/&#34;&gt;SEP Startup Weekend&lt;/a&gt;. It wasnât until this last week that I had an opportunity to finish it up and publish it. I have probably put 40 hours into it so far and though there are still several changes Iâd like to make to the code, it is published and live on the Windows Phone app store. It is my first mobile app.&lt;/p&gt;

&lt;p&gt;While working on the app I found a couple of very awesome sites. &lt;a href=&#34;http://rgb.to&#34;&gt;RGB.to&lt;/a&gt; is a great resource for converting colors between different formats. e.g. hex to HSL. It even supports HTML color names (which Windows Phone also uses). The other is &lt;a href=&#34;http://modernuiicons.com&#34;&gt;ModernUIIcons.com&lt;/a&gt;, an large, high-quality, free icon pack that really embraces the Windows Phone aesthetic. I will certainly be using more of those icons in the future.&lt;/p&gt;

&lt;p&gt;And now, the link youâve all been waiting for: check out âCrosswindâ in the Windows Phone Store! &lt;a href=&#34;http://www.windowsphone.com/en-us/store/app/crosswind/285e269d-0574-46ac-97e7-7f5386d154b2&#34;&gt;http://www.windowsphone.com/en-us/store/app/crosswind/285e269d-0574-46ac-97e7-7f5386d154b2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.windowsphone.com/en-us/store/app/crosswind/285e269d-0574-46ac-97e7-7f5386d154b2&#34;&gt;&lt;img src=&#34;/images/project/258x67_WPS_Download_cyan.png&#34; alt=&#34;Windows Phone Store link&#34; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This oneâs for you, Dad.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Creating a Pinned Site Live Tile easily and without pain</title>
      <link>http://www.ryanclarke.net/post/creating-a-pinned-site-live-tile-easily-and-without-pain/</link>
      <pubDate>Mon, 23 Jun 2014 09:00:00 EDT</pubDate>
      <author>Ryan Clarke</author>
      <guid>http://www.ryanclarke.net/post/creating-a-pinned-site-live-tile-easily-and-without-pain/</guid>
      <description>

&lt;p&gt;The list of things a developer must add to their website is constantly growing. I&amp;rsquo;m not talking about the big things; I&amp;rsquo;m talking about the little stuff that would be stupid to leave out. For instance, favicons were introduced by Internet Explorer 5 in 1999 (they made it into the HTML 4.01 recommendation later that year). Your site would function just as well without a favicon but you would be crazy not to have one. It&amp;rsquo;s basically a requirement. The same thing goes for the description meta tag and apple-touch-icon, among others.&lt;/p&gt;

&lt;p&gt;And now there&amp;rsquo;s another one: Pinned Site Live Tiles as implemented by IE11 in Windows 8.1 and Windows Phone 8.1. Pinned SLTs (which I call &amp;ldquo;slivets&amp;rdquo;) allows a website to have a series of beautiful images for the different sizes of Windows tiles and even allows the display of website information using some lovely built-in tile templates using a simple xml schema.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s a little more involved than, say, a favicon but it&amp;rsquo;s really not hard. Especially for the value you get. Microsoft has a lot of documentation to make this easy. What can be hard is finding the right page since it&amp;rsquo;s not all in one place. Here are some links to help you avoid wasted time and pain.&lt;/p&gt;

&lt;h3 id=&#34;toc_0&#34;&gt;Quick start&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://www.buildmypinnedsite.com&#34; title=&#34;http://www.buildmypinnedsite.com&#34;&gt;buildmypinnedsite.com&lt;/a&gt;- This is the very first place you should go if you want slivets. This easy wizard will get you up and running in no time. You will probably want to replace the images with something more professional and customize the urls to match your site, but it quickly gives you something that&amp;rsquo;s working and gives you a good place from which to start customizing. It&amp;rsquo;s basically the File &amp;gt; New of slivets. &lt;a href=&#34;http://www.hanselman.com/blog/MakeAWindows81PinnedLiveTileForYOURWebsiteInMinutes.aspx&#34; title=&#34;http://www.hanselman.com/blog/MakeAWindows81PinnedLiveTileForYOURWebsiteInMinutes.aspx&#34;&gt;Make a Windows 8.1 Pinned Live Tile for YOUR website in minutes&lt;/a&gt; - I&amp;rsquo;m not going to give a complete how-to because Scott Hanselman already has and his is better than mine would be. He walks you through the wizard site above and explains what it all means.&lt;/p&gt;

&lt;h3 id=&#34;toc_1&#34;&gt;Designing&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://msdn.microsoft.com/en-us/library/ie/dn455115%28v=vs.85%29.aspx&#34; title=&#34;http://msdn.microsoft.com/en-us/library/ie/dn455115%28v=vs.85%29.aspx&#34;&gt;Create live tiles for your websites in IE11&lt;/a&gt; - This is the jumping off place to explore the Microsoft help for slivets. Start here with questions.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://msdn.microsoft.com/en-us/library/ie/hh772707%28v=vs.85%29.aspx&#34; title=&#34;http://msdn.microsoft.com/en-us/library/ie/hh772707%28v=vs.85%29.aspx&#34;&gt;Pinned Sites&lt;/a&gt; - This the jumping off place to explore the Microsoft API documentation for pinned sites including schemas for the browser config, for html meta tags, and the complete list of properties, methods and events used by the browser. This is really helpful for pulling off some cool and crazy website-to-slivet interactions with the variety of available javascript hooks.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://msdn.microsoft.com/en-us/library/ie/hh761491.aspx&#34; title=&#34;http://msdn.microsoft.com/en-us/library/ie/hh761491.aspx&#34;&gt;The tile template catalog (Windows Runtime apps)&lt;/a&gt; - You&amp;rsquo;ll want to pick your tiles to fit the data you are displaying. This is the comprehensive list of all possible tiles with example xml and result photo to get you started. You should find several you like. Of course, you can make the tile look like whatever you want by simply picking the single photo template and generating the custom-formatted image yourself. But that would take more server infrastructure on your end and would risk making your tiles clash with the aesthetic of the OS. Still, the option is there.&lt;/p&gt;

&lt;h3 id=&#34;toc_2&#34;&gt;Debugging&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://msdn.microsoft.com/en-us/library/ie/dn439794%28v=vs.85%29.aspx&#34; title=&#34;http://msdn.microsoft.com/en-us/library/ie/dn439794%28v=vs.85%29.aspx&#34;&gt;Build a live tile&lt;/a&gt; - This starts out as Microsoft&amp;rsquo;s how-to guide but important part is at the very bottom under &amp;ldquo;Testing and finding problems with live tiles.&amp;rdquo; Slivets are designed to light up with whatever pieces are present and if they aren&amp;rsquo;t there, fallback to normal behavior. This is really nice for end-users, but it can make development difficult because when something doesn&amp;rsquo;t work, IE is quite taciturn about reasons. The tips at this link are simple but indispensable.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.telerik.com/fiddler&#34; title=&#34;http://www.telerik.com/fiddler&#34;&gt;Fiddler&lt;/a&gt; - While we are on the topic of debugging, you pretty much have to have Fiddler to monitor the network traffic. This will tell you if the endpoints you defined are even being hit. I wasted a couple hours trying to solve a seemingly impossible problem with my slivets, but after I used Fiddler I solved the problem in minutes.&lt;/p&gt;

&lt;p&gt;If you need any more help feel free to contact me. Of course, if you&amp;rsquo;d like to talk to someone who actually knows something, I&amp;rsquo;ve found Microsoft Program Managers &lt;a href=&#34;https://twitter.com/MattHidinger&#34; title=&#34;Twitter @MattHidinger&#34;&gt;MattHidinger&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/jacobrossi&#34; title=&#34;Twitter @jacobrossi&#34;&gt;Jacob Rossi&lt;/a&gt; to be quick, friendly and very helpful.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pinned Site Live Tiles belong on all sites</title>
      <link>http://www.ryanclarke.net/post/pinned-site-live-tiles-belong-on-all-sites/</link>
      <pubDate>Mon, 23 Jun 2014 08:00:00 EDT</pubDate>
      <author>Ryan Clarke</author>
      <guid>http://www.ryanclarke.net/post/pinned-site-live-tiles-belong-on-all-sites/</guid>
      <description>

&lt;p&gt;Imagine if you could take your existing website and turn it into an app with minimal effort. Of course, that&amp;rsquo;s impossible. But you &lt;em&gt;can&lt;/em&gt; get 75%* of the way there with an awesome new Internet Explorer feature I recently implemented on one of SEP&amp;rsquo;s sites called Pinned Site Live Tiles.&lt;/p&gt;

&lt;h3 id=&#34;toc_0&#34;&gt;What are Pinned Site Live Tiles?&lt;/h3&gt;

&lt;p&gt;I am sure you are familiar with live tiles. They first came with the launch of Windows Phone and now are a defining feature of Windows 8+ as well. Live tiles allow apps that have been pinned to the user&amp;rsquo;s start screen to update their tile with dynamically generated and presumably relevant information. Pinned SLTs (which I will now call slivets) bring that feature to Windows 8.1&amp;rsquo;s IE11 when you pin a web link to the start screen. They basically transform a simple bookmark with a blurry favicon into something almost indistinguishable from a real app. Scott Hanselman wrote anÂ &lt;a href=&#34;http://www.hanselman.com/blog/MakeAWindows81PinnedLiveTileForYOURWebsiteInMinutes.aspx&#34; title=&#34;Make a Windows 8.1 Pinned Live Tile for YOUR website in minutes&#34;&gt;easy how-to guide&lt;/a&gt;Â on his blog.&lt;/p&gt;

&lt;p&gt;But things just got better. Nestled deep withinÂ &lt;a href=&#34;https://twitter.com/matthidinger&#34; title=&#34;Twitter @MattHidinger&#34;&gt;Matt Hidinger&lt;/a&gt;&amp;rsquo;s interesting &amp;ldquo;&lt;a href=&#34;http://channel9.msdn.com/Events/Build/2014/2-523&#34; title=&#34;MSDN Channel9&#34;&gt;Live Tiles Enhancements&lt;/a&gt;&amp;rdquo; talk from Microsoft&amp;rsquo;s BUILD conference was a cool little revelation: slivets work on Windows Phone 8.1 as well as Windows 8.1. So now they work on all of Microsoft&amp;rsquo;s desktop, tablet, and phone platforms.&lt;/p&gt;

&lt;h3 id=&#34;toc_1&#34;&gt;A Disclaimer&lt;/h3&gt;

&lt;p&gt;I guess it&amp;rsquo;s worth mentioning that slivets only work when IE11 is the default browser. But that limitation doesn&amp;rsquo;t matter since it won&amp;rsquo;t affect your target audience. Anyone interested in apps, namely users of Windows tablets and Windows Phones, are almost certain to have IE as their default browser. And frankly, many desktop users never change their default browser away from IE.&lt;/p&gt;

&lt;h3 id=&#34;toc_2&#34;&gt;The Case for Pinned Site Live Tiles&lt;/h3&gt;

&lt;p&gt;Slivets work for almost the entire the app-inclined Windows user base and for all of Windows Phone users. This is a large market, and although currently perched at third place in worldwide market share, it is an underserved market too. Some may scoff at the size of this user base in comparison with Android and iOS. But anyone with a great website who wants apps is likely already going the Android/iOS route since they give the most bang for the many bucks it takes to build an app. That leaves just the Windows platforms in need of apps, and slivets fills those exact markets.&lt;/p&gt;

&lt;p&gt;You can enable one of the signature Windows platforms&amp;rsquo; features just by adding a couple meta tags to your header and a few xml files. Who cares about bang vs. buck when the price is nearly free. In fact, it&amp;rsquo;s so easy that even if you don&amp;rsquo;t have iOS/Android apps you should still enable slivets, the same way you would be silly not to include an apple-touch-icon.&lt;/p&gt;

&lt;p&gt;From now on, I plan to add slivets to all the websites I build unless it&amp;rsquo;s unnecessary or technically impossible.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Adding slivets to your site is not difficult, but there are some tricky situations that can waste your time if you don&amp;rsquo;t know where to look for answers. I&amp;rsquo;ve included some more technical information and helpful tips in my companion article, &amp;ldquo;&lt;a href=&#34;http://www.ryanclarke.net/post/creating-a-pinned-site-live-tile-easily-and-without-pain/&#34; title=&#34;How to create a Pinned Site Live Tile without pain&#34;&gt;How to create a Pinned Site Live Tile without pain&lt;/a&gt;.&amp;rdquo;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;*Disclaimer: invented number.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Wrestling with CheckedTextViews in an Android Multi-Choice ListView</title>
      <link>http://www.ryanclarke.net/post/checked-multi-choice-listviews/</link>
      <pubDate>Fri, 25 Apr 2014 00:00:00 UTC</pubDate>
      <author>Ryan Clarke</author>
      <guid>http://www.ryanclarke.net/post/checked-multi-choice-listviews/</guid>
      <description>&lt;p&gt;I was building an Android ListView in an AlertDialog.Builder that allowed multi-choice. It displayed a list of accounts and you could select the one or more you wanted to operate on. I also needed to be able to set certain accounts as checked by default.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/images/multichooser.png&#34; alt=&#34;Android MultiChooser AlertDialog&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;I couldn&amp;rsquo;t use the built in &lt;code&gt;AlertDialog.Builder(context).setMultiChoiceItems()&lt;/code&gt; method because it only accepts an array of strings of display data and I needed a custom list item view with the more complex AccountSummary object.&lt;/p&gt;

&lt;p&gt;Here is the getView method on my adapter.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@Override
public View getView(int position, View convertView, ViewGroup parent) {
    AccountSummary account = getItemAt(position);

    if (convertView == null) {
        convertView = getInflater().inflate(R.layout.account_multi_choice_dialog_item, null);
    }

    CheckedTextView text = convertView.findViewById(R.id.text_view);
    text.setText(account.name);

    // Set the CheckedTextView to checked if its a default here

    return convertView;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Everything is standard except for the need to potentially set the item as checked. You would think this would be very simple, just take the CheckedTextView and set it to checked.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    CheckedTextView text = convertView.findViewById(R.id.text_view);
    text.setText(account.name);

    // This does not work
    text.setChecked(account.isDefault);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;This does not work.&lt;/strong&gt; For some reason you can set CheckedTextView to checked for an hour&amp;rsquo;s worth on mintues in a row (I sure did) but it will never be remembered. In fact, I even tried checking the TextView from the &amp;lsquo;outside&amp;rsquo; by accessing the ListView from my activity, grabbing the correct CheckedTextView, and setting checked there. And that didn&amp;rsquo;t work either.&lt;/p&gt;

&lt;p&gt;It turns out, as I understand it, that the ListView maintains the checked state of its list items and ignores the state that item says it should have. The following small change in the code makes everything work charmingly.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    CheckedTextView text = convertView.findViewById(R.id.text_view);
    text.setText(account.name);

    // This, quite charmingly, works
    ((ListView) parent).setItemChecked(position, account.isDefault);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Instead of checking the item, I tell the ListView to set checked on the correct item. According to the Android source, AbsListView keeps all the checked state in a SparseBooleanArray so the checked state in the TextView goes nowhere and has no effect. I&amp;rsquo;m not sure I understand the full picture, but just set the checked state on the ListView, not the list item.&lt;/p&gt;

&lt;p&gt;So now you know.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using factories for cleanliness in Android testing</title>
      <link>http://www.ryanclarke.net/post/using-factories-for-cleanliness-in-android-testing/</link>
      <pubDate>Mon, 14 Apr 2014 00:00:00 UTC</pubDate>
      <author>Ryan Clarke</author>
      <guid>http://www.ryanclarke.net/post/using-factories-for-cleanliness-in-android-testing/</guid>
      <description>&lt;p&gt;I am on a team building a native Android app for a local credit union. We are doing some really cool stuff around testing with unit tests, automated instrumentation tests using spoon, and manual user experience testing. We are working in a low-ceremony, flow-based process with continuous client feedback.&lt;/p&gt;

&lt;p&gt;One tool we are using to greatly improve our test qualityÂ is factories. Android uses Java and so the very name &amp;ldquo;factory&amp;rdquo; on a Java project (for a credit union, no less) is probably making you think of BaseAbstractStrategyBuilderFactoryImpl and such, but such enterprisyness is not the case.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/images/pollution-295305_6401.png&#34; alt=&#34;Factory chimneys billowing polution&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;In reality, factoriesÂ aren&amp;rsquo;t obligatorilyÂ complex: we are simply building an object. If there was any business logic going on I&amp;rsquo;m sure it would be more complex, but we&amp;rsquo;re just using them in tests to make writing, debugging, and understanding them easier. Even with a test-first development flow, many tests end up needing some state setup to run correctly and hit to correct code paths. And state setup is a chore.&lt;/p&gt;

&lt;p&gt;Java is fairly verbose. Factories allow us to hide that boring instantiation and assignment snooze-festing in a separate place from the main test function.&lt;/p&gt;

&lt;p&gt;Take this example from a bit of code I&amp;rsquo;ve been working on recently. I&amp;rsquo;ve added some Arrange, Act, Assert comments to make this easier to follow.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@RunWith(AppTestRunner.class)
public class AccountsListActivityTest extends AppActivityUnitTestCase&amp;lt;AccountsListActivity&amp;gt; {

    public AccountsListActivityTest() {
        super(AccountsListActivity.class);
    }

    @Test
    public void selectingAccountListItemLaunchesAccountDetail() {

        // Arrange account
        Account account = new Account();
        account.id = &amp;quot;checking-account-id&amp;quot;;
        account.name = &amp;quot;CHECKING&amp;quot;;
        account.isInCashFlow = false;
        account.isFavorite = false;

        // Arrange group
        AccountGroup group = new AccountGroup();
        group.id = &amp;quot;group-id&amp;quot;;
        group.owners.add(&amp;quot;George E. Meade&amp;quot;);
        group.owners.add(&amp;quot;Robert E. Lee&amp;quot;);

        // Arrange group account
        group.accounts.add(account);

        // Arrange list item
        AccountListItem accountListItem = new AccountListItem();
        accountListItem.build(group, account);

        // Act
        activity.onItemSelected(accountListItem);

        // Assert
        Intent startedIntent = assertThat(activity).launchedActivity(AccountDetailActivity.class);
        assertThat(startedIntent).hasExtra(AppExtras.ACCOUNT, account);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Not very thrilling? At least it is straightforward, especially since you can see exactly what state is necessary to build make this action work. But why do we care that you can only build an accountListItem from a group and an account? Why do we care that account.isFavorite is required? &amp;ldquo;isFavorite = false&amp;rdquo; is my motto when it comes to this load of excess. All of the necessary state arrangements are clear, necessary, and completely irrelevant to what we&amp;rsquo;re testing. The boring explicitness makes the thing we care about hard to find. I told you this was a snooze-fest.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m going to take all the arrange stuff out and make a private method on my test class to hide all the boring setup.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@RunWith(AppTestRunner.class)
public class AccountsListActivityTest extends AppActivityUnitTestCase&amp;lt;AccountsListActivity&amp;gt; {

    public AccountsListActivityTest() {
        super(AccountsListActivity.class);
    }

    @Test
    public void selectingAccountListItemLaunchesAccountDetail() {
        // Arrange
        AccountListItem accountListItem = setupState();

        // Act
        activity.onItemSelected(accountListItem);

        // Assert
        Intent startedIntent = assertThat(activity).launchedActivity(AccountDetailActivity.class);
        assertThat(startedIntent).hasExtra(AppExtras.ACCOUNT, account);
    }

    private AccountListItem setupState() {
        // Arrange account
        Account account = new Account();
        account.id = &amp;quot;checking-account-id&amp;quot;;
        account.name = &amp;quot;CHECKING&amp;quot;;
        account.isInCashFlow = false;
        account.isFavorite = false;

        // Arrange group
        AccountGroup group = new AccountGroup();
        group.id = &amp;quot;group-id&amp;quot;;
        group.owners.add(&amp;quot;George E. Meade&amp;quot;);
        group.owners.add(&amp;quot;Robert E. Lee&amp;quot;);

        // Arrange group account
        group.accounts.add(account);

        // Arrange list item
        AccountListItem accountListItem = new AccountListItem();
        accountListItem.build(group, account);
    } 
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The setupState() method is still pretty overwhelming, but we can ignore it when we read the test method and that is an instant readability win.&lt;/p&gt;

&lt;p&gt;Now comes the point of this article. Since we don&amp;rsquo;t care about the details of the state setup for this test and the (redacted) others in this class, we can move all this out into a factory that will build the objects we need for us. Now other test classes that will need similar state just say &amp;ldquo;give me one&amp;rdquo; and no fuss will ensue. The reusability aspect is really nice. The test is now looking clean.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@RunWith(AppTestRunner.class)
public class AccountsListActivityTest extends AppActivityUnitTestCase&amp;lt;AccountsListActivity&amp;gt; {

    public AccountsListActivityTest() {
        super(AccountsListActivity.class);
    }

    @Test
    public void selectingAccountListItemLaunchesAccountDetail() {
        activity.onItemSelected(basicAccountListItem());

        Intent startedIntent = assertThat(activity).launchedActivity(AccountDetailActivity.class);
        assertThat(startedIntent).hasExtra(AppExtras.ACCOUNT_account, account);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In my factory I&amp;rsquo;ve refactored the state into a few simple, reusable methods that I can mix and match. This arrangement grew out of the needs of the various tests as we wrote them and needed different pieces of data.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public class AccountsFactory {

    private static AccountGroup emptyGroup() {
        AccountGroup group = new AccountGroup();
        group.id = &amp;quot;group-id&amp;quot;;
        group.owners.add(&amp;quot;George E. Meade&amp;quot;);
        group.owners.add(&amp;quot;Robert E. Lee&amp;quot;);

        return group;
    }

    public static AccountGroup groupWithAccount(Account account) {
        AccountGroup group = emptyGroup();
        group.accounts.add(basicAccount());

        return group;
    }

    public static Account basicAccount() {
        Account account = new Account();
        account.id = &amp;quot;checking-account-id&amp;quot;;
        account.name = &amp;quot;CHECKING&amp;quot;;
        account.isInCashFlow = false;
        account.isFavorite = false;

        return account;
    }

    public static AccountListItem basicAccountListItem() {
        AccountListItem accountListItem = new AccountListItem();
        accountListItem.build(groupWithAccount(), basicAccount());

        return accountListItem;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The Aesop-approved moral to this story is to only put the relevant stuff in the test and hide the rest of the boring state-making in a convenient spot for reuse. On this current project we call them factories, and they work great.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>You have to start somewhere</title>
      <link>http://www.ryanclarke.net/post/you-have-to-start-somewhere/</link>
      <pubDate>Fri, 07 Jun 2013 00:00:00 UTC</pubDate>
      <author>Ryan Clarke</author>
      <guid>http://www.ryanclarke.net/post/you-have-to-start-somewhere/</guid>
      <description>

&lt;p&gt;I started fresh in at SEP on Monday and by Tuesday the bananas were fresh out.&lt;/p&gt;

&lt;p&gt;Fellow new guy Jackson and I were taskedÂ with our first project on Monday just before quittin&amp;rsquo; time: update the internal rÃ©sumÃ© reporting website from &amp;lsquo;ancient&amp;rsquo; to &amp;lsquo;tomorrow.&amp;rsquo; It currently runs on a mid-2006 vintage copy of Ruby on Rails (version 1.1.6). We&amp;rsquo;re supposed to beÂ bringing it up to Rails 4 (coming soon, 2013) but some fundamental pieces of its inner-working were axed from Rails by the end of 2006. We&amp;rsquo;re not supposed to rewrite the project, just bring it up to date, but many important pieces cannot be upgraded.&lt;/p&gt;

&lt;p&gt;Full disclosure: I&amp;rsquo;m fresh in when it comes to Rails (&amp;ldquo;never touched the stuff&amp;rdquo;), so by Tuesday afternoon my brains were fresh out. And, as I said before, so were the bananas.&lt;/p&gt;

&lt;p&gt;As we passed through The Commons during the first-day tour, Laura from HR said &amp;ldquo;there shall be fruit&amp;rdquo; and, unfortunately, there was no fruit. In my hour of need: fresh out. To quote the great Barney Fife, &amp;ldquo;Well, Andy, a slender high-spirited person needs a sugar pick-me-up late in the day.&amp;rdquo; I had to settle for a cup of ice. Just then, something happenedâ¦&lt;/p&gt;

&lt;h5 id=&#34;toc_0&#34;&gt;Chapter 2&lt;/h5&gt;

&lt;p&gt;&lt;em&gt;Just when hope is almost lost, things start to look brighter for our young heroes.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A remarkable thing about SEP: everyone is willing to help. Not to be too self-critical (and Jackson&amp;rsquo;s effort, to be fair, was nothing short of heroic), but we needed help.
There are many things I don&amp;rsquo;t know. Rails is not the only thing on that list. Here are a few others to get you started. I don&amp;rsquo;t know:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The name of the git server (easy to guess)&lt;/li&gt;
&lt;li&gt;The name of the TFS server (impossible to guess, sounds more like a band name)&lt;/li&gt;
&lt;li&gt;The name of the database server (easy, but after the TFS server I was expecting anything)&lt;/li&gt;
&lt;li&gt;The name of the project (five-digit number starting with 06)&lt;/li&gt;
&lt;li&gt;The name of the guy in the next cube (I love the three-monitor setup)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I also don&amp;rsquo;t know about many company policies. For instance, do lowly developers need an official sanction from IT to brazenly install Ubuntu VMsÂ on our machines (no). And I haven&amp;rsquo;t even started on all the questions we had about the rÃ©sumÃ© website&amp;rsquo;s architecture and history.&lt;/p&gt;

&lt;h5 id=&#34;toc_1&#34;&gt;Chapter 3&lt;/h5&gt;

&lt;p&gt;&lt;em&gt;Sorry about chapter 2, this is where things actually get better.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Matt Swanson. He has worked on the rÃ©sumÃ© system. We asked him a lot of dumb questions and he gave us a lot of good answers. He helped us a ton and he&amp;rsquo;s given the project a fresh start.&lt;/p&gt;

&lt;p&gt;I would like to give a You Rockâ¢ card to Matt (like they told us about in orientation), but I don&amp;rsquo;t know where they are.&lt;/p&gt;

&lt;p&gt;P.S. For non-SEPeers: if you are given two You Rockâ¢ cards of the same color or one each of both colors, you can turn them in to receive Good Stuffâ¢.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

